#!/bin/bash

DEFAULTS="/etc/default/bt-mac"
BRCM_RESET_SCRIPT="/usr/local/bin/brcm_bt_reset"
BRCM_PATCH_SCRIPT="/usr/local/bin/brcm_patchram_plus"

# Include default if available
if [ -r "${DEFAULTS}" ]; then
    . "${DEFAULTS}"
fi

# Set mac address
if [ -z "$BT_MAC_ADDR" ]; then
    log_warning_msg "No BT_MAC_ADDR set in /etc/default/bt-mac, will use default 11:22:33:44:55:66 instead"
    BT_MAC_ADDR=11:22:33:44:55:66
fi
log_action_msg "Setting bluetooth mac address as ${BT_MAC_ADDR}"

# The BCM20710 must be reset (while its CTS pin is low) to enable
# UART mode so the patchram program can dowmload the firmware.
# The new approach is to run brcm_bt_reset first.

EXTRA=
RESET_SCRIPT=
PATCH_SCRIPT=

# Uncomment the line below to select the old way to reset the
# BCM20710.  This is done using a callout in the download program.
# bt.init is the standard script but you can change this if desired.

#PATCH_SCRIPT=bt.init

# If using the new "reset" program it will by default use /dev/mem
# to toggle the GPIOs.  Uncomment (and possibly change) the 
# following line if you want it to use a custom script to
# toggle the pins.

#RESET_SCRIPT=bt.init

# We set the debug option (-d) by default for new kernels.
# Comment the EXTRA=-d line if all seems okay.
# Change the ttyS1 line if required.

if [ `uname -r | grep '^3.4.' ` ] ; then
  BT_TTY=/dev/ttyS1
else
  EXTRA=-d
  BT_TTY=/dev/ttyS2
  [ -d /sys/devices/platform/soc@01c00000/1c28800.serial/tty/ttyS1 ] && BT_TTY=/dev/ttyS1
  [ -d /sys/devices/platform/soc@01c00000/1c28800.serial/tty/ttyS2 ] && BT_TTY=/dev/ttyS2
fi

# If new approach, we run the "reset" program here.

if [ "$PATCH_SCRIPT" = "" ] ; then
  ${BRCM_RESET_SCRIPT} ${BT_TTY} ${RESET_SCRIPT}
fi

# Now we run the download program with a time limit of 10 seconds.

timeout -k1s 10s \
${BRCM_PATCH_SCRIPT}  --patchram /lib/firmware/ap6210/bcm20710a1.hcd \
          --bd_addr ${BT_MAC_ADDR} \
          --no2bytes \
          --tosleep 2500 \
          $EXTRA \
        ${BT_TTY} \
        ${PATCH_SCRIPT} \
        2> /tmp/trace
